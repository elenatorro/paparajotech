{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","paparajotech/tests/adapters/application.jshint.js","paparajotech/tests/app.jshint.js","paparajotech/tests/constants/api.jshint.js","paparajotech/tests/constants/forms.jshint.js","paparajotech/tests/constants/locales.jshint.js","paparajotech/tests/constants/meetup-events.jshint.js","paparajotech/tests/helpers/destroy-app.js","paparajotech/tests/helpers/destroy-app.jshint.js","paparajotech/tests/helpers/ember-i18n/test-helpers.js","paparajotech/tests/helpers/h-html.jshint.js","paparajotech/tests/helpers/module-for-acceptance.js","paparajotech/tests/helpers/module-for-acceptance.jshint.js","paparajotech/tests/helpers/resolver.js","paparajotech/tests/helpers/resolver.jshint.js","paparajotech/tests/helpers/setup-games.js","paparajotech/tests/helpers/setup-games.jshint.js","paparajotech/tests/helpers/start-app.js","paparajotech/tests/helpers/start-app.jshint.js","paparajotech/tests/helpers/store.js","paparajotech/tests/helpers/store.jshint.js","paparajotech/tests/integration/components/change-locale-test.js","paparajotech/tests/integration/components/change-locale-test.jshint.js","paparajotech/tests/locales/en/translations.jshint.js","paparajotech/tests/locales/es/translations.jshint.js","paparajotech/tests/locales/murciano/translations.jshint.js","paparajotech/tests/models/company.jshint.js","paparajotech/tests/models/event.jshint.js","paparajotech/tests/pods/application/route.jshint.js","paparajotech/tests/pods/companies/company/route.jshint.js","paparajotech/tests/pods/companies/route.jshint.js","paparajotech/tests/pods/components/pt-change-locale/component.jshint.js","paparajotech/tests/pods/components/pt-event-card/component.jshint.js","paparajotech/tests/pods/components/pt-leaflet-tech-map/component.jshint.js","paparajotech/tests/pods/components/pt-nav-bar-collapse-button/component.jshint.js","paparajotech/tests/pods/components/pt-nav-bar-dropdown-button/component.jshint.js","paparajotech/tests/pods/components/pt-nav-bar/component.jshint.js","paparajotech/tests/pods/components/pt-popup/component.jshint.js","paparajotech/tests/pods/contact/route.jshint.js","paparajotech/tests/pods/events/route.jshint.js","paparajotech/tests/pods/index/route.jshint.js","paparajotech/tests/resolver.jshint.js","paparajotech/tests/router.jshint.js","paparajotech/tests/services/companies-geojson.jshint.js","paparajotech/tests/services/meetup-api.jshint.js","paparajotech/tests/services/route-model.jshint.js","paparajotech/tests/test-helper.js","paparajotech/tests/test-helper.jshint.js","paparajotech/tests/transforms/object.jshint.js","paparajotech/tests/unit/components/change-locale-test.js","paparajotech/tests/unit/components/change-locale-test.jshint.js","paparajotech/tests/unit/routes/application-test.js","paparajotech/tests/unit/routes/application-test.jshint.js","paparajotech/tests/unit/utils/utils.js","paparajotech/tests/unit/utils/utils.jshint.js","paparajotech/tests/utils/array-utils.jshint.js","paparajotech/tests/utils/meetup-api-key-sample.jshint.js","paparajotech/tests/utils/meetup-api-key.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('paparajotech/tests/adapters/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | adapters/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass jshint.');\n  });\n});","define('paparajotech/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('paparajotech/tests/constants/api.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | constants/api.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'constants/api.js should pass jshint.');\n  });\n});","define('paparajotech/tests/constants/forms.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | constants/forms.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'constants/forms.js should pass jshint.');\n  });\n});","define('paparajotech/tests/constants/locales.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | constants/locales.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'constants/locales.js should pass jshint.');\n  });\n});","define('paparajotech/tests/constants/meetup-events.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | constants/meetup-events.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'constants/meetup-events.js should pass jshint.');\n  });\n});","define('paparajotech/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('paparajotech/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('paparajotech/tests/helpers/ember-i18n/test-helpers', ['exports', 'ember'], function (exports, _ember) {\n\n  // example usage: find(`.header:contains(${t('welcome_message')})`)\n  _ember['default'].Test.registerHelper('t', function (app, key, interpolations) {\n    var i18n = app.__container__.lookup('service:i18n');\n    return i18n.t(key, interpolations);\n  });\n\n  // example usage: expectTranslation('.header', 'welcome_message');\n  _ember['default'].Test.registerHelper('expectTranslation', function (app, element, key, interpolations) {\n    var text = app.testHelpers.t(key, interpolations);\n\n    assertTranslation(element, key, text);\n  });\n\n  var assertTranslation = (function () {\n    if (typeof QUnit !== 'undefined' && typeof ok === 'function') {\n      return function (element, key, text) {\n        ok(find(element + ':contains(' + text + ')').length, 'Found translation key ' + key + ' in ' + element);\n      };\n    } else if (typeof expect === 'function') {\n      return function (element, key, text) {\n        var found = !!find(element + ':contains(' + text + ')').length;\n        expect(found).to.equal(true);\n      };\n    } else {\n      return function () {\n        throw new Error(\"ember-i18n could not find a compatible test framework\");\n      };\n    }\n  })();\n});","define('paparajotech/tests/helpers/h-html.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/h-html.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/h-html.js should pass jshint.');\n  });\n});","define('paparajotech/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember', 'paparajotech/tests/helpers/start-app', 'paparajotech/tests/helpers/destroy-app'], function (exports, _qunit, _ember, _paparajotechTestsHelpersStartApp, _paparajotechTestsHelpersDestroyApp) {\n  var Promise = _ember['default'].RSVP.Promise;\n\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _paparajotechTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _paparajotechTestsHelpersDestroyApp['default'])(_this.application);\n        });\n      }\n    });\n  };\n});","define('paparajotech/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('paparajotech/tests/helpers/resolver', ['exports', 'paparajotech/resolver', 'paparajotech/config/environment'], function (exports, _paparajotechResolver, _paparajotechConfigEnvironment) {\n\n  var resolver = _paparajotechResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _paparajotechConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _paparajotechConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('paparajotech/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('paparajotech/tests/helpers/setup-games', ['exports', 'ember-i18n/helper'], function (exports, _emberI18nHelper) {\n\n  function setupGames(appInstance) {\n    try {\n      appInstance.container.lookup('service:i18n').set('locale', 'en');\n      appInstance.registry.register('helper:t', _emberI18nHelper['default']);\n    } catch (reason) {\n      console.warn({ reason: reason });\n    }\n  }\n\n  exports['default'] = setupGames;\n});","define('paparajotech/tests/helpers/setup-games.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/setup-games.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/setup-games.js should pass jshint.');\n  });\n});","define('paparajotech/tests/helpers/start-app', ['exports', 'ember', 'paparajotech/app', 'paparajotech/config/environment'], function (exports, _ember, _paparajotechApp, _paparajotechConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _paparajotechConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _paparajotechApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('paparajotech/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('paparajotech/tests/helpers/store', ['exports', 'ember', 'ember-data', 'paparajotech/tests/helpers/owner'], function (exports, _ember, _emberData, _paparajotechTestsHelpersOwner) {\n  exports['default'] = setupStore;\n  exports.createStore = createStore;\n\n  function setupStore(options) {\n    var container, registry, owner;\n    var env = {};\n    options = options || {};\n\n    if (_ember['default'].Registry) {\n      registry = env.registry = new _ember['default'].Registry();\n      owner = _paparajotechTestsHelpersOwner['default'].create({\n        __registry__: registry\n      });\n      container = env.container = registry.container({\n        owner: owner\n      });\n      owner.__container__ = container;\n    } else {\n      container = env.container = new _ember['default'].Container();\n      registry = env.registry = container;\n    }\n\n    env.replaceContainerNormalize = function replaceContainerNormalize(fn) {\n      if (env.registry) {\n        env.registry.normalize = fn;\n      } else {\n        env.container.normalize = fn;\n      }\n    };\n\n    var adapter = env.adapter = options.adapter || '-default';\n    delete options.adapter;\n\n    if (typeof adapter !== 'string') {\n      env.registry.register('adapter:-ember-data-test-custom', adapter);\n      adapter = '-ember-data-test-custom';\n    }\n\n    for (var prop in options) {\n      registry.register('model:' + _ember['default'].String.dasherize(prop), options[prop]);\n    }\n\n    registry.optionsForType('serializer', { singleton: false });\n    registry.optionsForType('adapter', { singleton: false });\n    registry.register('adapter:-default', _emberData['default'].Adapter);\n\n    registry.register('serializer:-default', _emberData['default'].JSONSerializer);\n    registry.register('serializer:-rest', _emberData['default'].RESTSerializer);\n\n    registry.register('adapter:-rest', _emberData['default'].RESTAdapter);\n\n    registry.register('adapter:-json-api', _emberData['default'].JSONAPIAdapter);\n    registry.register('serializer:-json-api', _emberData['default'].JSONAPISerializer);\n\n    env.restSerializer = container.lookup('serializer:-rest');\n    env.store = container.lookup('service:store');\n    env.serializer = env.store.serializerFor('-default');\n    env.adapter = env.store.get('defaultAdapter');\n\n    return env;\n  }\n\n  exports.setupStore = setupStore;\n\n  function createStore(options) {\n    return setupStore(options).store;\n  }\n});","define('paparajotech/tests/helpers/store.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/store.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/store.js should pass jshint.');\n  });\n});","define('paparajotech/tests/integration/components/change-locale-test', ['exports', 'ember-qunit', 'paparajotech/locales/en/translations', 'paparajotech/locales/es/translations'], function (exports, _emberQunit, _paparajotechLocalesEnTranslations, _paparajotechLocalesEsTranslations) {\n\n  (0, _emberQunit.moduleForComponent)('pt-change-locale', 'Integration | Component | pt-change-locale', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it should be able to change the locale', function (assert) {\n    var _localesList, _changeToEnglishButton, _changeToSpanishButton;\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'revision': 'Ember@2.8.2',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 20\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'pt-change-locale', ['loc', [null, [1, 0], [1, 20]]], 0, 0, 0, 0]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    _localesList = this.$('ul').eq(0);\n    _changeToEnglishButton = this.$('li a').eq(0);\n    _changeToSpanishButton = this.$('li a').eq(1);\n\n    assert.ok(_localesList, 'it should display the locales button list');\n    assert.ok(_changeToEnglishButton, 'it should have a button to switch to English');\n    assert.ok(_changeToSpanishButton, 'it should have a button to switch to Spanish');\n\n    assert.ok(_changeToEnglishButton.text().trim(), _paparajotechLocalesEnTranslations['default'].components.changeLocale.english);\n    assert.ok(_changeToSpanishButton.text().trim(), _paparajotechLocalesEnTranslations['default'].components.changeLocale.spanish);\n\n    _changeToSpanishButton.click();\n\n    assert.ok(_changeToEnglishButton.text().trim(), _paparajotechLocalesEsTranslations['default'].components.changeLocale.english);\n    assert.ok(_changeToSpanishButton.text().trim(), _paparajotechLocalesEsTranslations['default'].components.changeLocale.spanish);\n\n    _changeToEnglishButton.click();\n    assert.ok(_changeToEnglishButton.text().trim(), _paparajotechLocalesEnTranslations['default'].components.changeLocale.english);\n    assert.ok(_changeToSpanishButton.text().trim(), _paparajotechLocalesEnTranslations['default'].components.changeLocale.spanish);\n  });\n});","define('paparajotech/tests/integration/components/change-locale-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/change-locale-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/change-locale-test.js should pass jshint.');\n  });\n});","define('paparajotech/tests/locales/en/translations.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | locales/en/translations.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/translations.js should pass jshint.');\n  });\n});","define('paparajotech/tests/locales/es/translations.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | locales/es/translations.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/es/translations.js should pass jshint.');\n  });\n});","define('paparajotech/tests/locales/murciano/translations.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | locales/murciano/translations.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/murciano/translations.js should pass jshint.');\n  });\n});","define('paparajotech/tests/models/company.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/company.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/company.js should pass jshint.');\n  });\n});","define('paparajotech/tests/models/event.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/event.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/event.js should pass jshint.');\n  });\n});","define('paparajotech/tests/pods/application/route.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | pods/application/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/application/route.js should pass jshint.');\n  });\n});","define('paparajotech/tests/pods/companies/company/route.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | pods/companies/company/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/companies/company/route.js should pass jshint.');\n  });\n});","define('paparajotech/tests/pods/companies/route.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | pods/companies/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/companies/route.js should pass jshint.');\n  });\n});","define('paparajotech/tests/pods/components/pt-change-locale/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | pods/components/pt-change-locale/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/components/pt-change-locale/component.js should pass jshint.');\n  });\n});","define('paparajotech/tests/pods/components/pt-event-card/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | pods/components/pt-event-card/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/components/pt-event-card/component.js should pass jshint.');\n  });\n});","define('paparajotech/tests/pods/components/pt-leaflet-tech-map/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | pods/components/pt-leaflet-tech-map/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/components/pt-leaflet-tech-map/component.js should pass jshint.');\n  });\n});","define('paparajotech/tests/pods/components/pt-nav-bar-collapse-button/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | pods/components/pt-nav-bar-collapse-button/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/components/pt-nav-bar-collapse-button/component.js should pass jshint.');\n  });\n});","define('paparajotech/tests/pods/components/pt-nav-bar-dropdown-button/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | pods/components/pt-nav-bar-dropdown-button/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/components/pt-nav-bar-dropdown-button/component.js should pass jshint.');\n  });\n});","define('paparajotech/tests/pods/components/pt-nav-bar/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | pods/components/pt-nav-bar/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/components/pt-nav-bar/component.js should pass jshint.');\n  });\n});","define('paparajotech/tests/pods/components/pt-popup/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | pods/components/pt-popup/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/components/pt-popup/component.js should pass jshint.');\n  });\n});","define('paparajotech/tests/pods/contact/route.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | pods/contact/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/contact/route.js should pass jshint.');\n  });\n});","define('paparajotech/tests/pods/events/route.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | pods/events/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/events/route.js should pass jshint.');\n  });\n});","define('paparajotech/tests/pods/index/route.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | pods/index/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/index/route.js should pass jshint.');\n  });\n});","define('paparajotech/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('paparajotech/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('paparajotech/tests/services/companies-geojson.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | services/companies-geojson.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/companies-geojson.js should pass jshint.');\n  });\n});","define('paparajotech/tests/services/meetup-api.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | services/meetup-api.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/meetup-api.js should pass jshint.');\n  });\n});","define('paparajotech/tests/services/route-model.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | services/route-model.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/route-model.js should pass jshint.');\n  });\n});","define('paparajotech/tests/test-helper', ['exports', 'paparajotech/tests/helpers/resolver', 'ember-qunit'], function (exports, _paparajotechTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_paparajotechTestsHelpersResolver['default']);\n});","define('paparajotech/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('paparajotech/tests/transforms/object.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | transforms/object.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'transforms/object.js should pass jshint.');\n  });\n});","define('paparajotech/tests/unit/components/change-locale-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('pt-change-locale', 'Unit | Component | pt-change-locale', {\n    needs: ['service:i18n'],\n    unit: true\n  });\n\n  (0, _emberQunit.test)('it should render', function (assert) {\n    var _component = this.subject();\n    assert.ok(_component);\n  });\n});","define('paparajotech/tests/unit/components/change-locale-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/components/change-locale-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/components/change-locale-test.js should pass jshint.');\n  });\n});","define('paparajotech/tests/unit/routes/application-test', ['exports', 'ember', 'ember-qunit', 'paparajotech/tests/helpers/start-app'], function (exports, _ember, _emberQunit, _paparajotechTestsHelpersStartApp) {\n\n  var App, AppInstance, ApplicationRoute;\n\n  (0, _emberQunit.moduleFor)('route:application', 'Unit | Route | application', {\n    needs: ['service:route', 'service:store', 'service:api', 'service:i18n'],\n\n    beforeEach: function beforeEach() {\n      App = (0, _paparajotechTestsHelpersStartApp['default'])();\n      AppInstance = App.buildInstance();\n      ApplicationRoute = this.subject();\n    },\n    afterEach: function afterEach() {\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  (0, _emberQunit.test)('it should have an application route', function (assert) {\n    assert.ok(ApplicationRoute, 'it should have an application route');\n  });\n});","define('paparajotech/tests/unit/routes/application-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/application-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/application-test.js should pass jshint.');\n  });\n});","define(\"paparajotech/tests/unit/utils/utils\", [\"exports\"], function (exports) {});","define('paparajotech/tests/unit/utils/utils.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/utils/utils.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/utils/utils.js should pass jshint.');\n  });\n});","define('paparajotech/tests/utils/array-utils.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | utils/array-utils.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'utils/array-utils.js should pass jshint.');\n  });\n});","define('paparajotech/tests/utils/meetup-api-key-sample.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | utils/meetup-api-key-sample.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'utils/meetup-api-key-sample.js should pass jshint.');\n  });\n});","define('paparajotech/tests/utils/meetup-api-key.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | utils/meetup-api-key.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'utils/meetup-api-key.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('paparajotech/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}